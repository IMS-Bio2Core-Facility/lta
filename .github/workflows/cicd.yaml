name: CI/CD
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  POETRY_VERSION: 1.1.12
  PSR_VERSION: 7.23.0
  CACHE_NUMBER: 3

# We cache the lint and security job, as there is no poetry install
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Format and Lint
        run: nox -s form lint type

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Check for Dependency Vulnerabilities
        run: nox -s security

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Test Code and Docs
        run: nox -s tests
      - name: Upload to codecov
        if: matrix.os  == "ubuntu-latest"
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          env_vars: ${{ matrix.os }}
          fail_ci_if_error: true
          verbose: true

  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [lint, test, security]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Upload to PyPI
        uses: ./.github/actions/setup_psr
        with:
          gh_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
          psr_version: ${{ env.PSR_VERSION }}
