name: CI/CD
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.7
        with:
          version: 1.1.7
      - name: Format and Lint
        run: nox -s form lint type
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.7
        with:
          version: 1.1.7
      - name: Test Code and Docs
        run: nox -s tests doc_tests
      - name: Upload to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.7
        with:
          version: 1.1.7
      - name: Check for Dependency Vulnerabilities
        run: nox -s security
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [lint, test, security]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Pyton
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Get Dependencies
        run: |
          pip install poetry python-semantic-release
      - name: Configure git
        run: |
          git config --global user.name 'rbpatt2019'
          git config --global user.email 'rbpatt2019@users.noreply.github.com'
      - name: Python Semantic Release
        run: |
          semantic-release -v DEBUG publish
